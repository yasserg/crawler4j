/**
 *
 *
 * Copyright 2018 Diffblue Limited
 *
 * Diffblue Limited licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package edu.uci.ics.crawler4j.tests.util;

import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class UtilTest {

    @Rule public ExpectedException thrown = ExpectedException.none();

    /* testedClasses: Util */

    /*
    * Test generated by Diffblue Deeptest.
    * This test case covers:
    *  - conditional line 70 branch to line 70
    *  - conditional line 72 branch to line 72
    *  - conditional line 72 branch to line 73
    *  - conditional line 73 branch to line 73
    */

    @Test
    public void hasBinaryContentInputNotNullOutputFalse() {

        // Arrange
        String contentType = "OIEGEG^";

        // Act
        boolean retval = edu.uci.ics.crawler4j.util.Util.hasBinaryContent(contentType);

        // Assert result
        Assert.assertEquals(false, retval);
    }

    /*
    * Test generated by Diffblue Deeptest.
    * This test case covers:
    *  - conditional line 70 branch to line 70
    *  - conditional line 72 branch to line 72
    *  - conditional line 72 branch to line 73
    */

    @Test
    public void hasBinaryContentInputNotNullOutputTrue() {

        // Arrange
        String contentType = "AAAUDIOt";

        // Act
        boolean retval = edu.uci.ics.crawler4j.util.Util.hasBinaryContent(contentType);

        // Assert result
        Assert.assertEquals(true, retval);
    }

    /*
    * Test generated by Diffblue Deeptest.
    * This test case covers:
    *  - conditional line 70 branch to line 70
    *  - conditional line 72 branch to line 73
    */

    @Test
    public void hasBinaryContentInputNotNullOutputTrue2() {

        // Arrange
        String contentType = "MIMAGE^";

        // Act
        boolean retval = edu.uci.ics.crawler4j.util.Util.hasBinaryContent(contentType);

        // Assert result
        Assert.assertEquals(true, retval);
    }

    /*
    * Test generated by Diffblue Deeptest.
    * This test case covers:
    *  - conditional line 77 branch to line 77
    *  - conditional line 79 branch to line 79
    */

    @Test
    public void hasPlainTextContentInputNotNullOutputFalse() {

        // Arrange
        String contentType = "}xhtml>";

        // Act
        boolean retval = edu.uci.ics.crawler4j.util.Util.hasPlainTextContent(contentType);

        // Assert result
        Assert.assertEquals(false, retval);
    }

    /*
    * Test generated by Diffblue Deeptest.
    * This test case covers:
    *  - conditional line 77 branch to line 77
    *  - conditional line 79 branch to line 79
    */

    @Test
    public void hasPlainTextContentInputNotNullOutputFalse2() {

        // Arrange
        String contentType = "TexThhtmL|";

        // Act
        boolean retval = edu.uci.ics.crawler4j.util.Util.hasPlainTextContent(contentType);

        // Assert result
        Assert.assertEquals(false, retval);
    }

    /*
    * Test generated by Diffblue Deeptest.
    * This test case covers:
    *  - conditional line 77 branch to line 77
    *  - conditional line 79 branch to line 79
    */

    @Test
    public void hasPlainTextContentInputNotNullOutputTrue() {

        // Arrange
        String contentType = "TEXTEXtddd";

        // Act
        boolean retval = edu.uci.ics.crawler4j.util.Util.hasPlainTextContent(contentType);

        // Assert result
        Assert.assertEquals(true, retval);
    }
}
